let currTheme = document.documentElement.getAttribute("data-theme"); var todoList = [{ text: "wakeup early at 5:00 AM", checked: !1 }, { text: "brush your teeth daily 2 times", checked: !1 }, { text: "exercise daily in morning", checked: !1 }], todoListOutputContainer = document.getElementById("todo-list-display"); function addNewTodo(a) { "" == a || 0 == a || 0 == a.length || todoList.includes(a) ? alert("please enter some text") : todoList.push({ text: a, checked: !1 }) } function renderTodos(a) { todoListOutputContainer.textContent = "", document.getElementById("availableTodosCount").textContent = a.length; let c = 0; for (let b = 0; b < a.length; b++)c++, todoListOutputContainer.insertAdjacentHTML("afterbegin", returnTodoBaseFormat(a[b], c)); handleDeleteTodo(), handleEditTodo() } function returnTodoBaseFormat(a, b) {let c = `<div id="todo-${b}"class="d-flex output_inputBox jc-sb brdr-y"><button class="btn--edit bg-none"><svg class="icon"><use xlink:href="./images/defs.svg#icon-check"></use></svg></button><p class="todo--text ${a.checked ? "txt-lt" : ""}">${a.text}</p><button class="btn--delete bg-none"><svg class="icon"><use xlink:href="./images/defs.svg#icon-cross"></use></svg></button></div>`; return c
} function init() { document.getElementById("form__todo-text").focus(); let a = localStorage.getItem("theme"); null == a ? localStorage.setItem("theme", currTheme) : "dark" != a && "light" != a ? (currTheme = "light", localStorage.setItem("theme", currTheme)) : currTheme = a } function change() { document.documentElement.getAttribute("data-theme"); var b = document.querySelector("#theme-btn > svg > use"); let a = b.getAttribute("xlink:href").split("-"); "light" == currTheme ? (currTheme = "dark", a[1] = "moon") : (currTheme = "light", a[1] = "sun"), b.setAttribute("xlink:href", a.join("-")), document.documentElement.setAttribute("data-theme", currTheme), localStorage.setItem("theme", currTheme) } for (let currFilterBtn of (init(), renderTodos(todoList), document.getElementById("todo-form").addEventListener("submit", b => { b.preventDefault(); var a = document.getElementById("form__todo-text"); addNewTodo(a.value), renderTodos(todoList), a.value = "" }), document.querySelectorAll(".filter--btn"))) currFilterBtn.addEventListener("click", a => { switch (a.preventDefault(), currFilterBtn.textContent.toLowerCase()) { case "all": renderTodos(todoList); break; case "active": renderTodos(todoList.filter(a => !a.checked)); break; case "completed": renderTodos(todoList.filter(a => a.checked)); break; case "clear completed": renderTodos(todoList = todoList.filter(a => !a.checked)) } }); function handleDeleteTodo() { for (let a of document.querySelectorAll(".btn--delete")) a.addEventListener("click", c => { c.preventDefault(); var b = a.parentElement.id.split("-")[1] - 1; !0 == todoList[b].checked ? todoList.splice(b, 1) : alert("Please mark your todo as checked before deleting."), renderTodos(todoList) }) } function handleEditTodo() { for (let a of document.querySelectorAll(".btn--edit")) a.addEventListener("click", e => { e.preventDefault(); let c = a.parentElement.id, d = document.querySelector(`#${c} > .todo--text`); var b = c.split("-")[1] - 1; !0 == todoList[b].checked ? (todoList[b].checked = !1, d.style.textDecoration = "none") : (todoList[b].checked = !0, d.style.textDecoration = "line-through") }) }